# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ release/0.4, develop, release/* ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ release/0.4 ]
  schedule:
    - cron: '24 3 * * 3'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-20.04
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      # - name: Autobuild
      #  uses: github/codeql-action/autobuild@v1

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö https://git.io/JvXDl

      # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language
      - run: |
          sudo apt-get install -y yasm
          sudo apt-get install -y libsdl2-dev
          sudo apt-get install git make gcc autoconf libtool yasm cmake g++ libsdl2-dev
          wget "https://github.com/Kitware/CMake/releases/download/v3.16.2/cmake-3.16.2-Linux-x86_64.tar.gz"
          tar zxf cmake-3.16.2-Linux-x86_64.tar.gz
          export PATH=`pwd`/cmake-3.16.2-Linux-x86_64/bin:$PATH
          sudo apt-get install clang llvm
          echo  1 | sudo update-alternatives --config c++
          echo  1 | sudo update-alternatives --config cc
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          . setup.env
          cd external/
          ./build_external.sh Linux
          cd ..
          cd cmdline/
          mkdir build
          cd build
          cmake ../
          make cicadaPlayer -j8

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1